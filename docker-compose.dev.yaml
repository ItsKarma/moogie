# Development override for docker-compose
# Use: docker-compose -f docker-compose.yaml -f docker-compose.dev.yaml up

services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    volumes:
      # Mount source code for hot reload
      - ./api:/app
      - /app/bin # Don't mount the bin directory
    environment:
      - APP_ENV=development
      - GIN_MODE=debug
    # Override the production entrypoint
    entrypoint: []
    command: >
      sh -c "
      echo 'üîß Starting Moogie API in development mode...';
      echo '‚è≥ Waiting for PostgreSQL to be ready...';
      until pg_isready -h postgres -p 5432 -U moogie; do sleep 1; done;
      echo '‚úÖ PostgreSQL is ready!';
      echo 'üóÑÔ∏è  Running database migrations...';
      goose -dir /app/migrations postgres 'host=postgres port=5432 user=moogie password=moogie dbname=moogie sslmode=disable' up;
      echo '‚úÖ Migrations completed!';
      echo 'üöÄ Starting Air for hot reload...';
      air -c .air.toml
      "

  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile.dev
    volumes:
      # Mount source for hot reload
      - ./ui:/app
      - /app/node_modules # Don't mount node_modules
    environment:
      - VITE_API_URL=http://localhost:8080
    command: npm run dev -- --host 0.0.0.0
    ports:
      - "3000:3000"

  docs:
    build:
      context: ./docs
      dockerfile: Dockerfile.dev
    volumes:
      - ./docs:/app
      - /app/node_modules
      - /app/build
      - /app/.docusaurus
    command: npm run start -- --host 0.0.0.0
    ports:
      - "3001:3000"

  # Enable pgAdmin for database management in development
  pgadmin:
    profiles: [] # Remove from profiles to always run in dev
